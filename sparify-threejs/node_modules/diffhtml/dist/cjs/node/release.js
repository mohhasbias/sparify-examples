'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = releaseNode;

var _cache = require('../util/cache');

var _memory = require('../util/memory');

/**
 * Releases state and recycles internal memory.
 *
 * @param node {Object} - A DOM Node to lookup state from
 */
function releaseNode(node) {
  // Try and find a state object for this DOM Node.
  var state = _cache.StateCache.get(node);

  // If there is a Virtual Tree element, recycle all objects allocated for it.
  if (state && state.oldTree) {
    (0, _memory.unprotectElement)(state.oldTree);
  }

  // Remove the Node's state object from the cache.
  _cache.StateCache.delete(node);

  // Recycle all unprotected objects.
  (0, _memory.cleanMemory)();
}
//# sourceMappingURL=release.js.map